plugins {
    id "com.android.application"
    id "kotlin-android"
    // Le plugin Gradle Flutter doit être appliqué après les plugins Android et Kotlin.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "me.ozapay"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17' // Assurez-vous que cela correspond à votre version de Java
    }

    defaultConfig {
        minSdk = 26
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }

    flavorDimensions "staging"

    productFlavors {
        prod {
            resValue "string", "app_name", "Ozapay"
        }
        dev {
            resValue "string", "app_name", "Ozapay-dev"
            applicationIdSuffix ".dev"
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.20"
    // Ajoutez d'autres dépendances ici si nécessaire
}

// Ajout des options pour activer l'avertissement de dépréciation
allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

// Utilisation de 'android' pour les dépendances de plugins Flutter
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.20" // Utilisez 'kotlin-stdlib' sans '-jdk7'
    // Ajoutez d'autres dépendances ici si nécessaire
}